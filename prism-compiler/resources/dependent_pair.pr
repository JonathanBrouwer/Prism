// Define Bools
let Bool = (T: Type) -> T -> T -> T;
let true: Bool = (T: Type) => (v1: T) => (v2: T) => v1;
let false: Bool = (T: Type) => (v1: T) => (v2: T) => v2;

let Pair
    : (T1: Type) -> (T2 : (T1 -> Type)) -> Type
    = (T1: Type) => (T2 : (T1 -> Type)) => (Out: Type) -> (destruct: ((v1: T1) -> (v2: T2 v1) -> Out)) -> Out;
let pair
    : (T1: Type) -> (T2 : (T1 -> Type)) -> (v1: T1) -> (v2: T2 v1) -> Pair T1 T2
    = (T1: Type) => (T2 : (T1 -> Type)) => (v1: T1) => (v2: T2 v1)
    => (Out: Type) => (destruct: ((v1: T1) -> (v2: T2 v1) -> Out))
    => destruct v1 v2;


pair   Bool ((v1: Bool) => v1 Type Bool Type) true false