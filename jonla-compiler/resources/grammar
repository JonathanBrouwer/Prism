ast Stmt:
    Let(e: Expr)
    Do()

ast Expr:
    Block(b: [Stmt])
    X()
    Y()

rule block -> [Stmt]:
    b <- "grammar" "{" "}" ";" b:block
    s :: b <- s:stmt ";" b:block
    [] <- ""

rule stmt -> Stmt:
    Let(e) <- "let" e:expr
    Do() <- "do"

rule expr -> Expr:
    Block(b) <- "{" b:block "}"
    X() <- "x"
    Y() <- "y"

rule layout -> Str = [' ' | '\n']
