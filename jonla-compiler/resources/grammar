rule block:
    b <- "grammar" "{" g:@grammar "}" ";" b:@adapt(g, block)
    Let(v, b) <- "let" v:expr ";" b:block
    expr

rule expr:
    -- fnconstruct
    FnConstruct(t, r) <- t:@this "." r:@this
    FnType(at, bt) <- at:@this "->" bt:@this
    -- fndestruct
    FnDestruct(f, a) <- f:@this " " a:@next
    -- base
    t <- "(" t:term ")"
    Type() <- "Type"

    @error("Integer")
    @disable_layout
    @disable_recovery
    Var(i) <- "#" i:@str([ '0'-'9' ]+)

rule layout = [' ' | '\n']
